/* 
    TEAM: Daniel Cox, Tristan Lotivio, Darien Kidwell
    Due Date: 4/18/2021 (Project Due date)
    Desc: This test.tig file is used for testing the implementation of Project 6 by Darien Kidwell
    
    This is the test case file. This program creates numerous type errors to test
    the type checking functionality of our Tiger compiler

    The test cases were provided by the instructor and will be provided in a table as part of the test report
*/
let
  var a := 1
  var b : int := 3
  var c : int := "Dad"
  var d : string := "heck"
  var e := NIL
  var n := NIL
  type intArr = array of int
  var arr := intArr [b] of 6
in
  a := 2 + d
  b := d + 2
  d := 2
  if(1<>e) then a := 66
  if(NIL=b) then a := 55
  if(NIL=e) then a := 44
  if(arr > d) then d:= "uwu"
  if(d < a) then d:= "still uwu"
  badFunction(1)
  a(1,2)
  print(d,c,2)
  concat(c)
  size(e)
  b := "umu"
  if(d) then d:= "words"
  if(1=1) then ()
  if(a=4) then d else b
  while (b=3) do ()
  for id := "where" to 4 do (print(id))
  for id := 1 to "here" do (print(id))
  for id := 1 to 4 do ()
  arr := ints [4] of 0
  arr := a[2] of 0
  arr := intArr["whack!"]
  arr := intArr[4] of "dang?"  
end